include: all_lint_rules.yaml

analyzer:
  plugins:
    - custom_lint

  errors:
    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.
    # We explicitly enabled even conflicting rules and are fixing the conflict
    # in this file
    included_file_warning: ignore

  exclude:
    # Exclude generated files
    - "**.freezed.dart"
    - "**.g.dart"
    - "**.gm.dart"
    - "**.gr.dart"
    - "**.gform.dart"
    - "**/generated_plugin_registrant.dart"
    - "**overriden_**.dart"

custom_lint:
  rules:
    - avoid_abbreviations_in_doc_comments: false
    - prefer_declaring_const_constructors: false
    - unnecessary_nullable_return_type: false
    - avoid_dynamic: false
    - max_lines_for_file:
      max_lines: 150
    - max_lines_for_function:
      max_lines: 100
    - boolean_prefix:
      valid_prefixes: [
        updateShouldNotify,
      ]

linter:
  rules:
    # Boring as it sometimes force a line of 81 characters to be split in two.
    # As long as we try to respect that 80 characters limit, going slightly
    # above is fine.
    lines_longer_than_80_chars: false

    # Not quite suitable for Flutter, which may have a `build` method with a single
    # return, but that return is still complex enough that a "body" is worth it.
    prefer_expression_function_bodies: false

    # There are situations where we voluntarily want to catch everything,
    # especially as a library.
    avoid_catches_without_on_clauses: false

    # Conflicts with `omit_local_variable_types` and other rules.
    # As per Dart guidelines, we want to avoid unnecessary types
    # to make the code more readable.
    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables
    always_specify_types: false

    # Far too verbose, and not that big of a deal when using parameter_assignments
    prefer_final_parameters: false

    # Conflicts with `prefer_single_quotes`
    # Single quotes are easier to type and don't compromise on readability.
    prefer_double_quotes: false

    # This project doesn't use Flutter-style todos
    flutter_style_todos: false

    # Conflicts with disabling `implicit-dynamic`
    avoid_annotating_with_dynamic: false

    # Incompatible with `prefer_final_locals`
    # Having immutable local variables makes larger functions more predictible
    # so we will use `prefer_final_locals` instead.
    unnecessary_final: false

    # conflicts with `prefer_relative_imports`
    always_use_package_imports: false

    # Disabled for now until we have NNBD as it otherwise conflicts with `missing_return`
    no_default_cases: false

    # False positive, null checks don't need a message
    prefer_asserts_with_message: false

    # Too many false positive (builders)
    diagnostic_describe_all_properties: false

    # false positives (setter-like functions)
    avoid_positional_boolean_parameters: false

    # Does not apply to providers
    prefer_const_constructors_in_immutables: false

    ## Disabled rules because the repository doesn't respect them (yet)
    comment_references: false
    avoid_classes_with_only_static_members: false
    do_not_use_environment: false
    discarded_futures: false
    use_decorated_box: false
    public_member_api_docs: false
    one_member_abstracts: false